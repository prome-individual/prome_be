generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int         @id @default(autoincrement())
  id            String      @unique
  password      String
  name          String?
  age           Int?
  gender        Gender?
  phone         String?
  refresh_token String?
  chat_rooms    ChatRoom[]
  diagnosis     Diagnosis[]
  hospitals     Hospital[]

  @@map("user")
}

model ChatRoom {
  chat_id    Int           @id @default(autoincrement())
  user_id    Int
  title      String?
  created_at DateTime      @default(now())
  comments   ChatComment[]
  user       User          @relation(fields: [user_id], references: [user_id])

  @@index([user_id], map: "chat_rooms_user_id_fkey")
  @@map("chat_rooms")
}

model ChatComment {
  content_id   Int      @id @default(autoincrement())
  chat_id      Int
  is_question  Boolean
  content      String
  created_at   DateTime @default(now())
  is_diag      Boolean? @default(false)
  is_recommend Boolean? @default(false)
  ecg          Int?     @default(-1)
  temp         Float?   @default(0)
  chat_room    ChatRoom @relation(fields: [chat_id], references: [chat_id])

  @@index([chat_id], map: "chat_comments_chat_id_fkey")
  @@map("chat_comments")
}

model Hospital {
  hospital_id   Int           @id @default(autoincrement())
  user_id       Int
  hospital_name String?
  distance      Float?
  address       String
  score         Int?
  calendars     Calendar[]
  user          User          @relation(fields: [user_id], references: [user_id])
  reservations  Reservation[]

  @@index([user_id], map: "hospital_user_id_fkey")
  @@map("hospital")
}

model Reservation {
  reservation_id   Int      @id @default(autoincrement())
  hospital_id      Int
  reservation_date DateTime
  hospital         Hospital @relation(fields: [hospital_id], references: [hospital_id])

  @@index([hospital_id], map: "reservation_hospital_id_fkey")
  @@map("reservation")
}

model Calendar {
  calendar_id   Int      @id @default(autoincrement())
  hospital_id   Int
  hospital_date DateTime
  hospital      Hospital @relation(fields: [hospital_id], references: [hospital_id])

  @@index([hospital_id], map: "calendar_hospital_id_fkey")
  @@map("calendar")
}

model Diagnosis {
  diagnosis_id Int      @id @default(autoincrement())
  user_id      Int
  result       String
  created_at   DateTime @default(now())
  user         User     @relation(fields: [user_id], references: [user_id])

  @@index([user_id], map: "diagnosis_user_id_fkey")
  @@map("diagnosis")
}

enum Gender {
  male
  female
}
